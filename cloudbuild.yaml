steps:
  - name: gcr.io/$PROJECT_ID/increment_build_number
    id: build-number
    waitFor:
      - '-'
    args: [ 'gs://${_CONFIG_BUCKET}/${_BUILD_NAME}', '--major', '0', '--minor', '1' ]
  - name: maven:3-jdk-8
    id: mvntest
    waitFor:
      - build-number
    entrypoint: mvn
    args: ["test"]
  - name: maven:3-jdk-8
    id: mvnpackage
    waitFor:
      - mvntest
    entrypoint: mvn
    args: ["package", "-Dmaven.test.skip=true"]              
            
  - name: gcr.io/cloud-builders/docker
    id: build-service
    waitFor:
      - mvnpackage
#    args: ["build", "-t", "gcr.io/$PROJECT_ID/addressbook:$build_num", "--build-arg=JAR_FILE=target/addressbook.jar", "."]
    entrypoint: 'bash'
    args:
      - -c
      - |
        source .buildenv &&
        docker build -t gcr.io/$PROJECT_ID/addressbook1:latest -t gcr.io/$PROJECT_ID/addressbook1:$build_num .
        docker push gcr.io/$PROJECT_ID/addressbook1:latest 
        docker push gcr.io/$PROJECT_ID/addressbook1:$build_num
        
#  - name: 'gcr.io/cloud-builders/git'
#   secretEnv: ['SSH_KEY']
#    entrypoint: 'bash'
#   id: sshkey-host
#  waitFor:
#     - build-service
#   args:
#   - -c
#   - |
#     echo "$$SSH_KEY" >> /root/.ssh/id_rsa
#     chmod 400 /root/.ssh/id_rsa
#     cp known_hosts.github /root/.ssh/known_hosts
#   volumes:
#   - name: 'ssh'
#    path: /root/.ssh

#  # Clone the repository
#  - name: 'gcr.io/cloud-builders/git'
#   id: clone-manifestrepo
#   waitFor:
#     - sshkey-host
#   args:
#  - clone
#  - --recurse-submodules
#  - git@github.com:rakesh635/devops_manifest
#  volumes:
#  - name: 'ssh'
#     path: /root/.ssh
       
#  - name: gcr.io/cloud-builders/git
#    id: generate-manifest
#    waitFor:
#      - clone-manifestrepo
#      - build-number
#    entrypoint: 'bash'
#   args:
#     - -c
#     - |
#       source .buildenv &&
#       sed -i "/addressbook1:/c\\      - image: gcr.io/shaped-kite-353908/addressbook1:${build_num}" devops_manifest/kube/addressbook_deploy.yaml
#       cat devops_manifest/kube/addressbook_deploy.yaml        
  
  # Update the container image using kubectl set 
  - name: 'gcr.io/cloud-builders/kubectl'
    id: push-manifest
    args:
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'image'
  - 'deployment/${_DEPLOYMENTNAME}'
  - '${_CONTAINERNAME}=gcr.io/${_PROJECT}/${_CONTAINERNAME}:${_VERSION}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'
###images: ["gcr.io/$PROJECT_ID/addressbook"]

